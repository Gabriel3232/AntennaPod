name: Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [master, develop]

jobs:
  wrapper-validation:
    name: "Gradle Wrapper Validation"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1

  main-unit-test:
    name: "Unit Test: ${{ matrix.variant }}"
    needs: wrapper-validation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - variant: "PlayDebug"
            execute-tests: true
            upload-artifact: true
          - variant: "PlayRelease"
            execute-tests: true
            upload-artifact: false
          - variant: "FreeRelease"
            execute-tests: false
            upload-artifact: false
    steps:
      - uses: actions/checkout@v2
      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
      - name: Create temporary release keystore
        run: keytool -noprompt -genkey -v -keystore "app/keystore" -alias alias -storepass password -keypass password -keyalg RSA -validity 10 -dname "CN=antennapod.org, OU=dummy, O=dummy, L=dummy, S=dummy, C=US"
      - name: Build
        run: ./gradlew assemble${{ matrix.variant }}
      - name: Test
        if: matrix.execute-tests == true
        run: ./gradlew test${{ matrix.variant }}UnitTest
      - uses: actions/upload-artifact@v2
        if: matrix.upload-artifact == true
        with:
          name: app-play-debug.apk
          path: app/build/outputs/apk/play/debug/app-play-debug.apk

  module-specific-unit-tests:
    name: "Unit Test: ${{ matrix.variant }}"
    needs: wrapper-validation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - variant: "event"
          - variant: "model"
    steps:
      - uses: actions/checkout@v2
      - name: Test
        run: ./gradlew ${{ matrix.variant }}:testReleaseUnitTest

  emulator-test:
    name: "Emulator Test"
    needs: wrapper-validation
    runs-on: macOS-latest
    env:
      api-level: 27
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
      - name: Build with Gradle
        run: ./gradlew assemblePlayDebugAndroidTest
      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
      - name: Cache AVD
        uses: actions/cache@v2
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ env.api-level }}
      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ env.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."
      - name: Android Emulator test
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ env.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: zsh .github/workflows/runEmulatorTests.sh
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: test-report
          path: app/build/reports/androidTests/connected/flavors/PLAY/
